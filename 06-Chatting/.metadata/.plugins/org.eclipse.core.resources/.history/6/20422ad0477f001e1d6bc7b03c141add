#include "UART.h"
#include "LCD.h"
#include "DIO.h"
#include "EXT_Interrupt.h"
#include <util/delay.h>


//#define MC2_READY 0x10
//
//volatile u8  arr[20] ;
//volatile u8  mos ;
//void function (void)
//{
//	static u8 count = 0 ;
//	if (mos == 0)
//	{
//		arr[count] = SPI_sendReceiveByte(arr[count]);
//
//		if (arr[count] == '#')
//		{
//			count = 0 ;
//			mos = 1 ;
//		}
//		else
//		{
//			count++ ;
//		}
//	}
//}
//
//
//int main(void)
//{
//	GIE_Enable();
//	u8 Str[20];
//
//	DIO_setupPinDirection(PORTD_ID, PIN3, PIN_INPUT);
//
//
//	DIO_setupPinDirection(PORTD_ID, PIN2, PIN_INPUT);
//	DIO_setupPinDirection(PORTB_ID, PIN0, PIN_OUTPUT);
//	DIO_writePin(PORTB_ID, PIN0, LOGIC_HIGH);
//
//	SPI_initMaster();
//
//	UART_ConfigType UART_Config ={BIT_8 ,DISABLED_PARITY ,STOP_ONE_BIT ,9600 };
//	UART_init( &UART_Config );
//	LCD_init();
//
//	EXI_TriggerEdge(EX_INT1, RISING);
//	EXI_SetCallBack(EX_INT1, function);
//	EXI_Enable(EX_INT1);
//
//
//
//	while(1)
//	{
//		UART_receiveString(Str);
//		DIO_writePin(PORTB_ID, PIN0, LOGIC_LOW);
//		SPI_sendString(Str);
//		DIO_writePin(PORTB_ID, PIN0, LOGIC_HIGH);
//
//		if (mos == 1 )
//		{
//			LCD_displayString(arr);
//			mos = 0 ;
//			_delay_ms(1000);
//			LCD_clearScreen();
//		}
//	}
//}
//
//
////		if (DIO_readPin(PORTD_ID, PIN2) == 0)
//		//		{
//		//			DIO_writePin(PORTB_ID, PIN0, LOGIC_LOW);
//		//			SPI_receiveString(Str);
//		//			DIO_writePin(PORTB_ID, PIN0, LOGIC_HIGH);
//		//			LCD_displayString(Str);
//		//			_delay_ms(1000);
//		//			LCD_clearScreen();
//		//
//		//		}
//

u8 sending_data[100];
u8 recieving_data[100];

void UART_callBack(void){
	SPI_sendReceiveByte('1');
	UART_receiveString(sending_data);
	_delay_ms(1);
	SPI_sendRecieveString(sending_data,recieving_data);
}

void PB_callBack(void){
	LCD_Clear();
	SPI_sendReceiveByte('1');
	SPI_sendRecieveString(sending_data,recieving_data);
	_delay_ms(1);
	LCD_displayString(recieving_data);
}


int main(void)
{
	SREG |=(1<<7);
	UART_ConfigType UART_Config ={BIT_8 ,DISABLED_PARITY ,STOP_ONE_BIT ,9600 };
	UART_init( &UART_Config );
	UART_RecieverSetCallBack(UART_callBack);

	LCD_Init();
	DIO_setupPinDirection(PORTD_ID, PIN2, PIN_INPUT);
	DIO_writePin(PORTD_ID, PIN2, LOGIC_HIGH);


	EXI_TriggerEdge(EX_INT0, FALLING);
	EXI_SetCallBack(EX_INT0, PB_callBack);
	EXI_Enable(EX_INT0);



	SPI_initMaster();
	while(1)
	{

	}
}
