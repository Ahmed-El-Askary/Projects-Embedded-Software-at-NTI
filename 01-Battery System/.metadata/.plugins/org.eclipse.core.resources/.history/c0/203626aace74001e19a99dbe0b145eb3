/*
 * ADC.c
 *
 *  Created on: Oct 24, 2023
 *      Author: DELL
 */
#include "ADC.h"
#include "std_types.h"
#include "ADC_config.h"
#include "ADC_private.h"
#include "common_macros.h"



static u8 ADC_Busy_flag ;

void ADC_init(ADC_VoltRef_type vref,ADC_Prescaler_type scaler)
{
	switch(vref)
	{
		case VREF_AREF:
		CLR_BIT(ADMUX,REFS1);
		CLR_BIT(ADMUX,REFS0);
		break;
		case VREF_AVCC:
		CLR_BIT(ADMUX,REFS1);
		SET_BIT(ADMUX,REFS0);
		break;
		case VREF_256V:
		SET_BIT(ADMUX,REFS1);
		SET_BIT(ADMUX,REFS0);
		break;

	}
	ADCSRA &= 0xf8 ;
	scaler &= 0x07 ;
	ADCSRA |= scaler ;

	SET_BIT(ADCSRA,ADEN);
}
u16 ADC_Read(ADC_Channel_type channal)
{
	ADMUX &= 0xE0 ;
	ADMUX |= channal ;
	SET_BIT(ADCSRA,ADSC);
	while(READ_BIT(ADCSRA,ADSC));
	return ADC ;
}
void ADC_Start_Conversion(ADC_Channel_type channal)
{
	if ( ADC_Busy_flag == 0 )
	{
		ADMUX &= 0xE0 ;
		ADMUX |= channal ;

		SET_BIT(ADCSRA,ADSC);
		ADC_Busy_flag = 1 ;
	}
}
u16 ADC_GetRead_busy8(void)
{
	while(READ_BIT(ADCSRA,ADSC));
	return ADC ;
}
u8 ADC_GetRead_Perodic(u16*result)
{
	if ( !READ_BIT(ADCSRA,ADSC) )
	{
		*result = ADC ;
		ADC_Busy_flag = 0 ;
		return 1 ;
	}
	return 0 ;
}
u16 ADC_VoltRead(ADC_Channel_type channal)
{
	u16 adc = ADC_Read(channal);
	u16 volt = (adc*(u32)5000) / 1024 ;
	return volt ;
}

